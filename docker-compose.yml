version: '3.7'
volumes:
  elastic:
    driver: 'local'
  appapi:
    driver: 'local'
  inputindexer:
    driver: 'local'
  minuteindexer:
    driver: 'local'
  troubleindexer:
    driver: 'local'
  mongodata:
    driver: 'local'

services:
  elasticsearch:
    build:
      context: ./elasticsearch
      dockerfile: ./Dockerfile
    image: elasticsearch-kuromoji:8.2.1
    container_name: elasticsearch
    environment:
      - TZ=Asia/Tokyo
      - ES_JAVA_OPTS=-Xms512m -Xmx1024m
      - discovery.type=single-node
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - http.cors.enabled=true
      - http.cors.allow-origin="*"
      - http.cors.allow-credentials=true
      - http.cors.allow-methods=OPTIONS, HEAD, GET, POST, PUT, DELETE
      - http.cors.allow-headers=X-Requested-With, X-Auth-Token, Content-Type, Content-Length, Authorization, Access-Control-Allow-Headers, Accept, x-elastic-client-meta
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - elastic:/usr/share/elasticsearch/data
      - ./kuromoji-user.dic:/usr/share/elasticsearch/config/kuromoji-user.dic:ro
    restart: always
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.2.1
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - I18N_LOCALE=ja-JP
    depends_on:
      - elasticsearch
    restart: always
  pdfindexer:
    build:
      context: ./pdf_indexer
      dockerfile: ./Dockerfile
    image: pdfindexer
    container_name: inputindexer
    volumes:
      - inputindexer:/root/.cache
      - ./sample:/app/sample:ro
    environment:
      - TZ=Asia/Tokyo
      - ES_INDEX_NAME=pdfdoc
      - TARGET_DIRECTORY=/app/sample/inputs
      - TOPPAGE_ONLY=true
      - MAPPING_JSON_PATH=/app/es_settings/pdfdoc_mapping.json
      - SETTING_JSON_PATH=/app/es_settings/pdfdoc_setting.json
    depends_on:
      - elasticsearch
    restart: always
  minuteindexer:
    image: pdfindexer
    container_name: minuteindexer
    volumes:
      - minuteindexer:/root/.cache
      - ./sample:/app/sample:ro
    environment:
      - TZ=Asia/Tokyo
      - ES_INDEX_NAME=minutes
      - TARGET_DIRECTORY=/app/sample/minutes
      - TOPPAGE_ONLY=true
      - MAPPING_JSON_PATH=/app/es_settings/minutes_mapping.json
      - SETTING_JSON_PATH=/app/es_settings/minutes_setting.json
    depends_on:
      - elasticsearch
    restart: always
  troubleindexer:
    build:
      context: ./excel_indexer
      dockerfile: ./Dockerfile
    image: excelindexer
    container_name: troubleindexer
    volumes:
      - troubleindexer:/root/.cache
      - ./infopost:/app/infopost:ro
    environment:
      TZ: Asia/Tokyo
      ES_INDEX_NAME: troubles
      TARGET_DIRECTORY: /app/infopost/troubles
      MAPPING_JSON_PATH: /app/es_settings/troubles_mapping.json
      SETTING_JSON_PATH: /app/es_settings/troubles_setting.json
      HEADER_MAPPING: '{"trouble_header": 0, "cause_header": 1, "response_header": 2}'
      DATA_MAPPING: '{"trouble": 0, "cause": 1, "response": 2}'
      EMBEDDING_COLUMNS: '{"trouble_vector": 0}'
    depends_on:
      - elasticsearch
    restart: always
  appapi:
    build:
      context: ./appapi
      dockerfile: ./Dockerfile
    image: appapi
    container_name: appapi
    ports:
      - 8065:8000
    volumes:
      - appapi:/root/.cache
    environment:
      - TZ=Asia/Tokyo
      - TROUBLE_FULL_TEXT_RATIO=1.0
      - TROUBLE_EMBEDDINGS_RATIO=1.0
      - TROUBLE_USER_RATING_RATIO=0.2
    depends_on:
      - elasticsearch
      - mongodb
    restart: always
  front:
    build:
      context: ./front
      dockerfile: ./Dockerfile
      args:
        - REACT_APP_APPAPI_HOST=http://localhost:8065
        - REACT_APP_INPUT_DIR_NAME=inputs
        - REACT_APP_MINUTE_DIR_NAME=minutes
    image: front
    container_name: front
    volumes:
      - ./sample:/usr/share/nginx/html/media:ro
    ports:
      - 80:80
    depends_on:
      - appapi
    restart: always
  boltapp:
    build:
      context: ./boltapp
      dockerfile: ./Dockerfile
    image: boltapp
    container_name: boltapp
    environment:
      - TZ=Asia/Tokyo
      - DEFAULT_SIZE=3
      - DEFAULT_MAX_SIZE=5
      - DEFAULT_MIN_SCORE=2.5
      - DEFAULT_MAX_SCORE=6
      - GLOBAL_APPAPI_HOST=localhost:8065
    ports:
      - 3000:3000
    depends_on:
      - appapi
      - mongodb
  mongodb:
    container_name: mongodb
    image: mongo:5.0.16-focal
    environment:
      - TZ=Asia/Tokyo
      - MONGO_INITDB_ROOT_USERNAME=mongo
      - MONGO_INITDB_ROOT_PASSWORD=mongo
      - MONGO_INITDB_DATABASE=app
    volumes:
      - ./mongo_init.js:/docker-entrypoint-initdb.d/mongo_init.js
      - mongodata:/data/db
    ports:
      - 27017:27017
    restart: always
